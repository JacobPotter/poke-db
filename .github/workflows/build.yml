# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  pull_request:
    branches: [ "main" ]

jobs:

  build-backend:
    runs-on: ubuntu-latest
    container: golang:1.23-bookworm

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      - name: Postgres Backup Restore
        uses: tj-actions/pg-restore@v6
        with:
          database_url: "postgres://postgres:postgres@postgres:5432/postgres"
          backup_file: "api/seed/mock-dump.sql"

      - name: Build
        run: go build -v -buildvcs=false ./...

      - name: Test Jobs
        env:
          DB_HOST: postgres
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
        run: go test github.com/WebWizardsDev/poke-db/api/jobs -v ./...

      - name: Test Controllers
        env:
          DB_HOST: postgres
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
        run: go test github.com/WebWizardsDev/poke-db/api/controllers -v ./...

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup npm
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 18.8.x

      - name: Install
        run: npm install

      - name: Playwright Install
        run: npx playwright install

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test
       
     
       
